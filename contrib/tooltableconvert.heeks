<?xml version="1.0" encoding="UTF-8" ?>
<HeeksCAD_Document>
    <Program machine="emc2b" output_file="/tmp/test.tap" output_file_name_follows_data_file_name="1" program='# coding=UTF8&#x0A;# No troubled Microsoft Windows detected&#x0A;import sys&#x0A;sys.path.insert(0,&apos;/usr/lib/heekscnc/&apos;)&#x0A;import math&#x0A;import nc.attach&#x0A;import ocl&#x0A;import ocl_funcs&#x0A;from nc.nc import *&#x0A;import nc.emc2b&#x0A;&#x0A;output(&apos;/home/brad/heekscad/heekscnc/contrib/tooltableconvert.tap&apos;)&#x0A;program_begin(123, &apos;Test program&apos;)&#x0A;absolute()&#x0A;metric()&#x0A;set_plane(0)&#x0A;&#x0A;comment(&apos;Feeds and Speeds set for machining Please select a material to machine&apos;)&#x0A;#(1/4 &quot; inch spiral 2-flute)&#x0A;tool_defn( id=1, name=&apos;1/4 \&quot; inch spiral 2-flute&apos;, radius=3.175, length=None, gradient=0)&#x0A;#(corebox bit)&#x0A;tool_defn( id=2, name=&apos;corebox bit&apos;, radius=6.35, length=None, gradient=0)&#x0A;#(3/4 router bit)&#x0A;tool_defn( id=3, name=&apos;3/4 router bit&apos;, radius=9.525, length=None, gradient=0)&#x0A;#(1/8 inch straight cut)&#x0A;tool_defn( id=4, name=&apos;1/8 inch straight cut&apos;, radius=1.5875, length=None, gradient=0)&#x0A;#(1/16 inch end mill)&#x0A;tool_defn( id=5, name=&apos;1/16 inch end mill&apos;, radius=0.79375, length=None, gradient=0)&#x0A;#(1/32 inch end mill)&#x0A;tool_defn( id=6, name=&apos;1/32 inch end mill&apos;, radius=0.396875, length=None, gradient=0)&#x0A;#(Keyway cutter)&#x0A;tool_defn( id=7, name=&apos;Keyway cutter&apos;, radius=4.7625, length=None, gradient=0)&#x0A;#(1/2 inch straight cut)&#x0A;tool_defn( id=8888, name=&apos;1/2 inch straight cut&apos;, radius=6.35, length=None, gradient=0)&#x0A;#(1/4 inch 2 flute downcut)&#x0A;tool_defn( id=988, name=&apos;1/4 inch 2 flute downcut&apos;, radius=3.175, length=None, gradient=0)&#x0A;workplane(1)&#x0A;&#x0A;import re&#x0A;import os&#x0A;&#x0A;input_file = &apos;/mnt/datamonster/Brads_Stuff/tool.tbl&apos;&#x0A;output_file = &apos;~/default.tooltable&apos;&#x0A;&#x0A;output_file = os.path.expanduser(output_file)&#x0A;&#x0A;class ToolTableWriter:&#x0A;    def __init__(self):&#x0A;        pass&#x0A; &#x0A;  ###############################################################################&#x0A; ##  Internals&#x0A;    &#x0A;    def file_start(self, outputfilename):&#x0A;        self.file_out = open(outputfilename, &apos;w&apos;)&#x0A;&#x0A;&#x0A;    def file_end(self):&#x0A;        self.file_out.close()&#x0A;&#x0A;    def write(self, s):&#x0A;        self.file_out.write(s)&#x0A;&#x0A;    def clean_string(self, s,):&#x0A;        s.replace(&apos;&amp;&apos;, &apos;&amp;amp;&apos;)&#x0A;        s.replace(&apos;&quot;&apos;, &apos;&amp;quot;&apos;)&#x0A;        s.replace(&apos;&lt;&apos;, &apos;&amp;lt;&apos;)&#x0A;        s.replace(&apos;&gt;&apos;, &apos;&amp;gt;&apos;)&#x0A;        return s&#x0A;    &#x0A;class HeeksTool:&#x0A;    def __init__(self):&#x0A;        self.tool_id = 0&#x0A;        self.tool_number = 0&#x0A;        self.tool_title = &quot;&quot;&#x0A;        self.diameter = 0&#x0A;        self.x_offset = 0&#x0A;        self.tool_length_offset = 0&#x0A;        self.automatically_generated_title = &quot;&quot;&#x0A;        self.material = &quot;1&quot;&#x0A;        self.max_advance_per_revolution = 0&#x0A;        self.orientation = 0&#x0A;        self.type= &quot;HSS&quot;&#x0A;        self.corner_radius = 0&#x0A;        self.flat_radius=0&#x0A;        self.cutting_edge_angle=0&#x0A;        self.cutting_edge_height=0&#x0A;        self.front_angle=0&#x0A;        self.tool_angle=0&#x0A;        self.back_angle=0&#x0A;        self.probe_offset_x=0&#x0A;        self.probe_offset_y=0&#x0A;        self.feedrate=0&#x0A;        self.gradient=0&#x0A;        self.pitch=0&#x0A;        self.direction=0&#x0A;        &#x0A;    def __iter__(self):&#x0A;        for item in self.__dict__:&#x0A;            yield self.__dict__[item]&#x0A;  &#x0A;    def toolheader(self):&#x0A;        s =&quot;\t&lt;Tool title = &apos;&quot;+self.tool_title.rstrip()+&quot;&apos; &quot;&#x0A;        s = s + &apos;tool_number=&quot;&apos;+str(self.tool_number)+&apos;&quot; &apos;&#x0A;        s = s + &apos;id=&quot;&apos; + str(self.tool_id)+ &apos;&quot;&gt;\n&apos;&#x0A;        return s &#x0A;    &#x0A;    def toolfooter(self):&#x0A;        string = &quot;\t\t&lt;/Tool&gt;\n&quot;&#x0A;        return string&#x0A;    &#x0A;    def params(self):&#x0A;        s=&quot;\t\t&lt;params &quot;&#x0A;        s = s + &apos;diameter= &quot;&apos;+self.diameter+&apos;&quot;&apos;&#x0A;        s = s + &apos; x_offset=&quot;&apos;+str(self.x_offset)+&apos;&quot;&apos;&#x0A;        s = s + &apos; tool_length_offset=&quot;&apos;+str(self.tool_length_offset)+&apos;&quot;&apos;&#x0A;        s = s + &apos; max_advance_per_revolution=&quot;&apos;+str(self.max_advance_per_revolution)+&apos;&quot;&apos;&#x0A;        s = s + &apos; automatically_generate_title= &quot;&apos;+self.automatically_generated_title+&apos;&quot;&apos;&#x0A;        s = s + &apos; material=&quot;&apos;+str(self.material)+&apos;&quot;&apos;&#x0A;        s = s + &apos; orientation=&quot;&apos;+str(self.orientation)+&apos;&quot;&apos;&#x0A;        s = s + &apos; type=&quot;&apos;+str(self.type)+&apos;&quot;&apos;&#x0A;        s = s + &apos; corner_radius=&quot;&apos;+str(self.corner_radius)+&apos;&quot;&apos;&#x0A;        s = s + &apos; flat_radius=&quot;&apos;+str(self.flat_radius)+&apos;&quot;&apos;&#x0A;        s = s + &apos; cutting_edge_angle=&quot;&apos;+str(self.cutting_edge_angle)+&apos;&quot;&apos;&#x0A;        s = s + &apos; cutting_edge_height=&quot;&apos;+str(self.cutting_edge_height)+&apos;&quot;&apos;&#x0A;        s = s + &apos; front_angle=&quot;&apos;+str(self.front_angle)+&apos;&quot;&apos;&#x0A;        s = s + &apos; tool_angle=&quot;&apos;+str(self.tool_angle)+&apos;&quot;&apos;&#x0A;        s = s + &apos; back_angle=&quot;&apos;+str(self.back_angle)+&apos;&quot;&apos;&#x0A;        s = s + &apos; probe_offset_x=&quot;&apos;+str(self.probe_offset_x)+&apos;&quot;&apos;&#x0A;        s = s + &apos; probe_offset_y=&quot;&apos;+str(self.probe_offset_y)+&apos;&quot;&apos;&#x0A;        s = s + &apos; width_over_thickness=&quot;&quot;&apos;&#x0A;        s = s + &apos; feedrate=&quot;&apos;+str(self.feedrate)+&apos;&quot;&apos;&#x0A;        s = s + &apos; extrusion_material=&quot;&quot;&apos;&#x0A;        s = s + &apos; layer_height=&quot;&quot;&apos;&#x0A;        s = s + &apos; temperature=&quot;&quot;&apos;&#x0A;        s = s + &apos; filament_diameter=&quot;&quot;&apos;&#x0A;        s = s + &apos; flowrate=&quot;&quot;&apos;&#x0A;        s = s + &apos; gradient=&quot;&apos;+str(self.gradient)+&apos;&quot;&apos;&#x0A;        s = s + &apos; pitch=&quot;&apos;+str(self.pitch)+&apos;&quot;&apos;     &#x0A;        s = s + &apos; direction=&quot;&apos;+str(self.direction)+&apos;&quot;&apos;&#x0A;        s = s + &apos;/&gt;\n&apos;      &#x0A;        return s &#x0A;&#x0A;class HeeksTable:&#x0A;    def __init__(self):&#x0A;        pass&#x0A;    def preamble (self):&#x0A;        s = &apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&apos;&#x0A;        s = s +&apos;&lt;HeeksCAD_Document&gt;\n&apos;&#x0A;        return s&#x0A;        &#x0A;    def postamble (self):&#x0A;        s = &apos;&lt;/HeeksCAD_Document&gt;\n&apos;&#x0A;        return s&#x0A;&#x0A;    def WriteTable(self, tools, filename):&#x0A;        writer = ToolTableWriter()&#x0A;        writer.file_start(filename)&#x0A;        writer.write(self.preamble())&#x0A;        for t in tools:&#x0A;            writer.write(writer.clean_string(t.toolheader()))&#x0A;            writer.write(t.params())&#x0A;            writer.write(t.toolfooter())&#x0A;        writer.write(self.postamble())&#x0A;        writer.file_end()            &#x0A;        &#x0A;def parse_emc24(filename):  #Parses an emc2 tooltable version 2.4 or later&#x0A;  tools = []&#x0A;&#x0A;  # Open and read the file.  Not all tool entries have all values, so find what we have.&#x0A;  f = open(filename, &apos;rU&apos;)&#x0A;  for line in f.readlines():&#x0A;    match = re.search(r&apos;T(\d+)&apos;, line) #ToolID&#x0A;    if match:&#x0A;        newtool = HeeksTool()&#x0A;        newtool.tool_id= len(tools)+1&#x0A;        newtool.tool_number = match.group(1)&#x0A;        match = re.search(r&apos;X([-.\d]+)&apos;, line) #XOffset&#x0A;        if match:&#x0A;            newtool.x_offset = match.group(1)&#x0A;        match = re.search(r&apos;Z([-.\d]+)&apos;, line) #ZOffset&#x0A;        if match:&#x0A;            newtool.tool_length_offset = match.group(1)&#x0A;&#x0A;        match = re.search(r&apos;D([-.\d]+)&apos;, line) #Diameter&#x0A;        if match:&#x0A;            newtool.diameter = match.group(1)&#x0A;        match = re.search(r&apos;I([-.\d]+)&apos;, line) #Front Angle&#x0A;        if match:&#x0A;            newtool.front_angle = match.group(1)&#x0A;        match = re.search(r&apos;J([-.\d]+)&apos;, line) #Back Angle&#x0A;        if match:&#x0A;            newtool.back_angle = match.group(1)&#x0A;        match = re.search(r&apos;Q([-.\d]+)&apos;, line) #Orientation&#x0A;        if match:&#x0A;            newtool.orientation = match.group(1)&#x0A;        match = re.search(r&apos;;([-.&quot;/\w\d\s]+)&apos;, line) #Remark&#x0A;        if match:&#x0A;            newtool.tool_title = match.group(1)&#x0A;        else:&#x0A;            ToolComment =  &apos;none&apos;      &#x0A;        tools.append(newtool)&#x0A;  return tools&#x0A;&#x0A;def emc2heeks(emc_file, heeks_file):&#x0A;    tools = parse_emc24(emc_file)&#x0A;    writer = HeeksTable()&#x0A;    writer.WriteTable(tools, heeks_file)&#x0A;    &#x0A;emc2heeks(input_file, output_file )    &#x0A;comment(&apos;tool table written&apos;)&#x0A;program_end()&#x0A;' units="1" ProgramPathControlMode="3" ProgramMotionBlendingTolerance="0.0001" ProgramNaiveCamTolerance="0.0001" brinell_hardness="0" raw_material_name="Please select a material to machine" max_spindle_speed="0" safety_height_defined="0" safety_height="0" clearance_height="50" id="1">
        <Tools>
            <Tool title='1/4 &quot; inch spiral 2-flute' tool_number="1" id="1">
                <params diameter="6.35" x_offset="0" tool_length_offset="0" max_advance_per_revolution="0" automatically_generate_title="0" material="1" orientation="0" type="0" corner_radius="0" flat_radius="0" cutting_edge_angle="0" cutting_edge_height="0" front_angle="0" tool_angle="0" back_angle="0" probe_offset_x="0" probe_offset_y="0" width_over_thickness="1.8" feedrate="0" extrusion_material="0" layer_height="0.35" temperature="220" filament_diameter="3" flowrate="255" gradient="0" pitch="0" direction="0" />
            </Tool>
            <Tool title="corebox bit" tool_number="2" id="2">
                <params diameter="12.7" x_offset="0" tool_length_offset="0" max_advance_per_revolution="0" automatically_generate_title="0" material="1" orientation="0" type="0" corner_radius="0" flat_radius="0" cutting_edge_angle="0" cutting_edge_height="0" front_angle="0" tool_angle="0" back_angle="0" probe_offset_x="0" probe_offset_y="0" width_over_thickness="1.8" feedrate="0" extrusion_material="0" layer_height="0.35" temperature="220" filament_diameter="3" flowrate="255" gradient="0" pitch="0" direction="0" />
            </Tool>
            <Tool title="3/4 router bit" tool_number="3" id="3">
                <params diameter="19.05" x_offset="0" tool_length_offset="0" max_advance_per_revolution="0" automatically_generate_title="0" material="1" orientation="0" type="0" corner_radius="0" flat_radius="0" cutting_edge_angle="0" cutting_edge_height="0" front_angle="0" tool_angle="0" back_angle="0" probe_offset_x="0" probe_offset_y="0" width_over_thickness="1.8" feedrate="0" extrusion_material="0" layer_height="0.35" temperature="220" filament_diameter="3" flowrate="255" gradient="0" pitch="0" direction="0" />
            </Tool>
            <Tool title="1/8 inch straight cut" tool_number="4" id="4">
                <params diameter="3.175" x_offset="0" tool_length_offset="0" max_advance_per_revolution="0" automatically_generate_title="0" material="1" orientation="0" type="0" corner_radius="0" flat_radius="0" cutting_edge_angle="0" cutting_edge_height="0" front_angle="0" tool_angle="0" back_angle="0" probe_offset_x="0" probe_offset_y="0" width_over_thickness="1.8" feedrate="0" extrusion_material="0" layer_height="0.35" temperature="220" filament_diameter="3" flowrate="255" gradient="0" pitch="0" direction="0" />
            </Tool>
            <Tool title="1/16 inch end mill" tool_number="5" id="5">
                <params diameter="1.5875" x_offset="0" tool_length_offset="0" max_advance_per_revolution="0" automatically_generate_title="0" material="1" orientation="0" type="0" corner_radius="0" flat_radius="0" cutting_edge_angle="0" cutting_edge_height="0" front_angle="0" tool_angle="0" back_angle="0" probe_offset_x="0" probe_offset_y="0" width_over_thickness="1.8" feedrate="0" extrusion_material="0" layer_height="0.35" temperature="220" filament_diameter="3" flowrate="255" gradient="0" pitch="0" direction="0" />
            </Tool>
            <Tool title="1/32 inch end mill" tool_number="6" id="6">
                <params diameter="0.79375" x_offset="0" tool_length_offset="0" max_advance_per_revolution="0" automatically_generate_title="0" material="1" orientation="0" type="0" corner_radius="0" flat_radius="0" cutting_edge_angle="0" cutting_edge_height="0" front_angle="0" tool_angle="0" back_angle="0" probe_offset_x="0" probe_offset_y="0" width_over_thickness="1.8" feedrate="0" extrusion_material="0" layer_height="0.35" temperature="220" filament_diameter="3" flowrate="255" gradient="0" pitch="0" direction="0" />
            </Tool>
            <Tool title="Keyway cutter" tool_number="7" id="7">
                <params diameter="9.525" x_offset="0" tool_length_offset="0" max_advance_per_revolution="0" automatically_generate_title="0" material="1" orientation="0" type="0" corner_radius="0" flat_radius="0" cutting_edge_angle="0" cutting_edge_height="0" front_angle="0" tool_angle="0" back_angle="0" probe_offset_x="0" probe_offset_y="0" width_over_thickness="1.8" feedrate="0" extrusion_material="0" layer_height="0.35" temperature="220" filament_diameter="3" flowrate="255" gradient="0" pitch="0" direction="0" />
            </Tool>
            <Tool title="1/2 inch straight cut" tool_number="8888" id="8">
                <params diameter="12.7" x_offset="0" tool_length_offset="0" max_advance_per_revolution="0" automatically_generate_title="0" material="1" orientation="0" type="0" corner_radius="0" flat_radius="0" cutting_edge_angle="0" cutting_edge_height="0" front_angle="0" tool_angle="0" back_angle="0" probe_offset_x="0" probe_offset_y="0" width_over_thickness="1.8" feedrate="0" extrusion_material="0" layer_height="0.35" temperature="220" filament_diameter="3" flowrate="255" gradient="0" pitch="0" direction="0" />
            </Tool>
            <Tool title="1/4 inch 2 flute downcut" tool_number="988" id="9">
                <params diameter="6.35" x_offset="0" tool_length_offset="0" max_advance_per_revolution="0" automatically_generate_title="0" material="1" orientation="0" type="0" corner_radius="0" flat_radius="0" cutting_edge_angle="0" cutting_edge_height="0" front_angle="0" tool_angle="0" back_angle="0" probe_offset_x="0" probe_offset_y="0" width_over_thickness="1.8" feedrate="0" extrusion_material="0" layer_height="0.35" temperature="220" filament_diameter="3" flowrate="255" gradient="0" pitch="0" direction="0" />
            </Tool>
        </Tools>
        <Fixtures />
        <Operations>
            <ScriptOp script='import re&#x0A;import os&#x0A;&#x0A;input_file = &apos;/home/emc2/machine1/tool.tbl&apos;&#x0A;output_file = &apos;~/default.tooltable&apos;&#x0A;&#x0A;output_file = os.path.expanduser(output_file)&#x0A;&#x0A;class ToolTableWriter:&#x0A;    def __init__(self):&#x0A;        pass&#x0A; &#x0A;  ###############################################################################&#x0A; ##  Internals&#x0A;    &#x0A;    def file_start(self, outputfilename):&#x0A;        self.file_out = open(outputfilename, &apos;w&apos;)&#x0A;&#x0A;&#x0A;    def file_end(self):&#x0A;        self.file_out.close()&#x0A;&#x0A;    def write(self, s):&#x0A;        self.file_out.write(s)&#x0A;&#x0A;    def clean_string(self, s,):&#x0A;        s.replace(&apos;&amp;&apos;, &apos;&amp;amp;&apos;)&#x0A;        s.replace(&apos;&quot;&apos;, &apos;&amp;quot;&apos;)&#x0A;        s.replace(&apos;&lt;&apos;, &apos;&amp;lt;&apos;)&#x0A;        s.replace(&apos;&gt;&apos;, &apos;&amp;gt;&apos;)&#x0A;        return s&#x0A;    &#x0A;class HeeksTool:&#x0A;    def __init__(self):&#x0A;        self.tool_id = 0&#x0A;        self.tool_number = 0&#x0A;        self.tool_title = &quot;&quot;&#x0A;        self.diameter = 0&#x0A;        self.x_offset = 0&#x0A;        self.tool_length_offset = 0&#x0A;        self.automatically_generated_title = &quot;&quot;&#x0A;        self.material = &quot;1&quot;&#x0A;        self.max_advance_per_revolution = 0&#x0A;        self.orientation = 0&#x0A;        self.type= &quot;HSS&quot;&#x0A;        self.corner_radius = 0&#x0A;        self.flat_radius=0&#x0A;        self.cutting_edge_angle=0&#x0A;        self.cutting_edge_height=0&#x0A;        self.front_angle=0&#x0A;        self.tool_angle=0&#x0A;        self.back_angle=0&#x0A;        self.probe_offset_x=0&#x0A;        self.probe_offset_y=0&#x0A;        self.feedrate=0&#x0A;        self.gradient=0&#x0A;        self.pitch=0&#x0A;        self.direction=0&#x0A;        &#x0A;    def __iter__(self):&#x0A;        for item in self.__dict__:&#x0A;            yield self.__dict__[item]&#x0A;  &#x0A;    def toolheader(self):&#x0A;        s =&quot;\t&lt;Tool title = &apos;&quot;+self.tool_title.rstrip()+&quot;&apos; &quot;&#x0A;        s = s + &apos;tool_number=&quot;&apos;+str(self.tool_number)+&apos;&quot; &apos;&#x0A;        s = s + &apos;id=&quot;&apos; + str(self.tool_id)+ &apos;&quot;&gt;\n&apos;&#x0A;        return s &#x0A;    &#x0A;    def toolfooter(self):&#x0A;        string = &quot;\t\t&lt;/Tool&gt;\n&quot;&#x0A;        return string&#x0A;    &#x0A;    def params(self):&#x0A;        s=&quot;\t\t&lt;params &quot;&#x0A;        s = s + &apos;diameter= &quot;&apos;+self.diameter+&apos;&quot;&apos;&#x0A;        s = s + &apos; x_offset=&quot;&apos;+str(self.x_offset)+&apos;&quot;&apos;&#x0A;        s = s + &apos; tool_length_offset=&quot;&apos;+str(self.tool_length_offset)+&apos;&quot;&apos;&#x0A;        s = s + &apos; max_advance_per_revolution=&quot;&apos;+str(self.max_advance_per_revolution)+&apos;&quot;&apos;&#x0A;        s = s + &apos; automatically_generate_title= &quot;&apos;+self.automatically_generated_title+&apos;&quot;&apos;&#x0A;        s = s + &apos; material=&quot;&apos;+str(self.material)+&apos;&quot;&apos;&#x0A;        s = s + &apos; orientation=&quot;&apos;+str(self.orientation)+&apos;&quot;&apos;&#x0A;        s = s + &apos; type=&quot;&apos;+str(self.type)+&apos;&quot;&apos;&#x0A;        s = s + &apos; corner_radius=&quot;&apos;+str(self.corner_radius)+&apos;&quot;&apos;&#x0A;        s = s + &apos; flat_radius=&quot;&apos;+str(self.flat_radius)+&apos;&quot;&apos;&#x0A;        s = s + &apos; cutting_edge_angle=&quot;&apos;+str(self.cutting_edge_angle)+&apos;&quot;&apos;&#x0A;        s = s + &apos; cutting_edge_height=&quot;&apos;+str(self.cutting_edge_height)+&apos;&quot;&apos;&#x0A;        s = s + &apos; front_angle=&quot;&apos;+str(self.front_angle)+&apos;&quot;&apos;&#x0A;        s = s + &apos; tool_angle=&quot;&apos;+str(self.tool_angle)+&apos;&quot;&apos;&#x0A;        s = s + &apos; back_angle=&quot;&apos;+str(self.back_angle)+&apos;&quot;&apos;&#x0A;        s = s + &apos; probe_offset_x=&quot;&apos;+str(self.probe_offset_x)+&apos;&quot;&apos;&#x0A;        s = s + &apos; probe_offset_y=&quot;&apos;+str(self.probe_offset_y)+&apos;&quot;&apos;&#x0A;        s = s + &apos; width_over_thickness=&quot;&quot;&apos;&#x0A;        s = s + &apos; feedrate=&quot;&apos;+str(self.feedrate)+&apos;&quot;&apos;&#x0A;        s = s + &apos; extrusion_material=&quot;&quot;&apos;&#x0A;        s = s + &apos; layer_height=&quot;&quot;&apos;&#x0A;        s = s + &apos; temperature=&quot;&quot;&apos;&#x0A;        s = s + &apos; filament_diameter=&quot;&quot;&apos;&#x0A;        s = s + &apos; flowrate=&quot;&quot;&apos;&#x0A;        s = s + &apos; gradient=&quot;&apos;+str(self.gradient)+&apos;&quot;&apos;&#x0A;        s = s + &apos; pitch=&quot;&apos;+str(self.pitch)+&apos;&quot;&apos;     &#x0A;        s = s + &apos; direction=&quot;&apos;+str(self.direction)+&apos;&quot;&apos;&#x0A;        s = s + &apos;/&gt;\n&apos;      &#x0A;        return s &#x0A;&#x0A;class HeeksTable:&#x0A;    def __init__(self):&#x0A;        pass&#x0A;    def preamble (self):&#x0A;        s = &apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&apos;&#x0A;        s = s +&apos;&lt;HeeksCAD_Document&gt;\n&apos;&#x0A;        return s&#x0A;        &#x0A;    def postamble (self):&#x0A;        s = &apos;&lt;/HeeksCAD_Document&gt;\n&apos;&#x0A;        return s&#x0A;&#x0A;    def WriteTable(self, tools, filename):&#x0A;        writer = ToolTableWriter()&#x0A;        writer.file_start(filename)&#x0A;        writer.write(self.preamble())&#x0A;        for t in tools:&#x0A;            writer.write(writer.clean_string(t.toolheader()))&#x0A;            writer.write(t.params())&#x0A;            writer.write(t.toolfooter())&#x0A;        writer.write(self.postamble())&#x0A;        writer.file_end()            &#x0A;        &#x0A;def parse_emc24(filename):  #Parses an emc2 tooltable version 2.4 or later&#x0A;  tools = []&#x0A;&#x0A;  # Open and read the file.  Not all tool entries have all values, so find what we have.&#x0A;  f = open(filename, &apos;rU&apos;)&#x0A;  for line in f.readlines():&#x0A;    match = re.search(r&apos;T(\d+)&apos;, line) #ToolID&#x0A;    if match:&#x0A;        newtool = HeeksTool()&#x0A;        newtool.tool_id= len(tools)+1&#x0A;        newtool.tool_number = match.group(1)&#x0A;        match = re.search(r&apos;X([-.\d]+)&apos;, line) #XOffset&#x0A;        if match:&#x0A;            newtool.x_offset = match.group(1)&#x0A;        match = re.search(r&apos;Z([-.\d]+)&apos;, line) #ZOffset&#x0A;        if match:&#x0A;            newtool.tool_length_offset = match.group(1)&#x0A;&#x0A;        match = re.search(r&apos;D([-.\d]+)&apos;, line) #Diameter&#x0A;        if match:&#x0A;            newtool.diameter = match.group(1)&#x0A;        match = re.search(r&apos;I([-.\d]+)&apos;, line) #Front Angle&#x0A;        if match:&#x0A;            newtool.front_angle = match.group(1)&#x0A;        match = re.search(r&apos;J([-.\d]+)&apos;, line) #Back Angle&#x0A;        if match:&#x0A;            newtool.back_angle = match.group(1)&#x0A;        match = re.search(r&apos;Q([-.\d]+)&apos;, line) #Orientation&#x0A;        if match:&#x0A;            newtool.orientation = match.group(1)&#x0A;        match = re.search(r&apos;;([-.&quot;/\w\d\s]+)&apos;, line) #Remark&#x0A;        if match:&#x0A;            newtool.tool_title = match.group(1)&#x0A;        else:&#x0A;            ToolComment =  &apos;none&apos;      &#x0A;        tools.append(newtool)&#x0A;  return tools&#x0A;&#x0A;def emc2heeks(emc_file, heeks_file):&#x0A;    tools = parse_emc24(emc_file)&#x0A;    writer = HeeksTable()&#x0A;    writer.WriteTable(tools, heeks_file)&#x0A;    &#x0A;emc2heeks(input_file, output_file )    &#x0A;comment(&apos;tool table written&apos;)&#x0A;' emit_depthop_params="0" active="1" title="ScriptOp" tool_number="10029" id="1">
                <depthop clear="5" down="1" startdepth="0" depth="-1" r="2" abs_mode="0" />
                <speedop hfeed="1500" vfeed="1000" spin="7000" />
            </ScriptOp>
        </Operations>
        <SpeedReferences estimate_when_possible="1" id="1">
            <SpeedReference title="Aluminium (15) with Carbide" surface_speed="182" tool_material="1" brinell_hardness_of_raw_material="15" raw_material_name="Aluminium" id="1" />
            <SpeedReference title="Aluminium (15) with Carbide" surface_speed="33" tool_material="1" brinell_hardness_of_raw_material="15" raw_material_name="Aluminium" id="2" />
            <SpeedReference title="Mild Steel (150) with Carbide" surface_speed="182" tool_material="1" brinell_hardness_of_raw_material="150" raw_material_name="Mild Steel" id="3" />
            <SpeedReference title="Mild Steel (150) with Carbide" surface_speed="59" tool_material="1" brinell_hardness_of_raw_material="150" raw_material_name="Mild Steel" id="4" />
            <SpeedReference title="Alloy Steel &lt; 0.3% carbon (200) with Carbide" surface_speed="106" tool_material="1" brinell_hardness_of_raw_material="200" raw_material_name="Alloy Steel &lt; 0.3% carbon" id="5" />
            <SpeedReference title="Alloy Steel &lt; 0.3% carbon (200) with Carbide" surface_speed="24" tool_material="1" brinell_hardness_of_raw_material="200" raw_material_name="Alloy Steel &lt; 0.3% carbon" id="6" />
            <SpeedReference title="Alloy Steel &gt; 0.3% carbon (200) with Carbide" surface_speed="99" tool_material="1" brinell_hardness_of_raw_material="200" raw_material_name="Alloy Steel &gt; 0.3% carbon" id="7" />
            <SpeedReference title="Alloy Steel &gt; 0.3% carbon (200) with Carbide" surface_speed="24" tool_material="1" brinell_hardness_of_raw_material="200" raw_material_name="Alloy Steel &gt; 0.3% carbon" id="8" />
            <CuttingRate title="Brinell (15) at 400 (mm^3/min)" brinell_hardness_of_raw_material="15" max_material_removal_rate="400" id="1" />
            <CuttingRate title="Brinell (150) at 1600 (mm^3/min)" brinell_hardness_of_raw_material="150" max_material_removal_rate="1600" id="2" />
        </SpeedReferences>
        <nccode edited="0" id="1">
            <ncblock id="0">
                <text col="comment">(Created with emc2b post processor 2011/09/13 11:03)</text>
            </ncblock>
            <ncblock id="0">
                <text col="comment">(Feeds and Speeds set for machining Please select a material to machine)</text>
            </ncblock>
            <ncblock id="0">
                <text>G54</text>
                <text></text>
                <text col="comment">(Select Relative Coordinate System)</text>
            </ncblock>
            <ncblock id="0">
                <text col="comment">(tool table written)</text>
            </ncblock>
            <ncblock id="0">
                <text col="misc">M02</text>
            </ncblock>
        </nccode>
    </Program>
    <Text text="This file containts a ScriptOp that will import a EMC2 tool table and " font="OpenGL" col="0" m0="1" m1="0" m2="0" m3="-50" m4="0" m5="1" m6="0" m7="27" m8="0" m9="0" ma="1" mb="0" id="1" />
    <Text text="write a HeeksCAD compatible tool table. " font="OpenGL" col="0" m0="1" m1="0" m2="0" m3="-50" m4="0" m5="1" m6="0" m7="24" m8="0" m9="0" ma="1" mb="0" id="2" />
    <Text text="To use the file:" font="OpenGL" col="0" m0="1" m1="0" m2="0" m3="-50" m4="0" m5="1" m6="0" m7="18" m8="0" m9="0" ma="1" mb="0" id="3" />
    <Text text="Specify the Input and Output file by editing the text of the ScripOp operation." font="OpenGL" col="0" m0="1" m1="0" m2="0" m3="-50" m4="0" m5="1" m6="0" m7="13" m8="0" m9="0" ma="1" mb="0" id="4" />
    <Text text="The default output file will become the default tooltable read when heekscad loads." font="OpenGL" col="0" m0="1" m1="0" m2="0" m3="-41" m4="0" m5="1" m6="0" m7="9" m8="0" m9="0" ma="1" mb="0" id="5" />
    <Text text='Then click the Machining menu item &quot;Post Process&quot;' font="OpenGL" col="0" m0="1" m1="0" m2="0" m3="-50" m4="0" m5="1" m6="0" m7="-3" m8="0" m9="0" ma="1" mb="0" id="6" />
</HeeksCAD_Document>
